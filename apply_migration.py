#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–æ—Ä–æ–¥–æ–≤
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from sqlalchemy import text

def apply_migration():
    """–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è city_id"""
    app = create_app()
    
    with app.app_context():
        try:
            print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–æ—Ä–æ–¥–æ–≤...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞ city_id –≤ users
            result = db.session.execute(text("PRAGMA table_info(users)")).fetchall()
            columns = [row[1] for row in result]
            
            if 'city_id' not in columns:
                print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ city_id –≤ —Ç–∞–±–ª–∏—Ü—É users...")
                db.session.execute(text("ALTER TABLE users ADD COLUMN city_id VARCHAR(50) DEFAULT 'almaty'"))
                db.session.execute(text("CREATE INDEX IF NOT EXISTS idx_users_city ON users(city_id)"))
            else:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ city_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ users")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º orders
            result = db.session.execute(text("PRAGMA table_info(orders)")).fetchall()
            columns = [row[1] for row in result]
            
            if 'city_id' not in columns:
                print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ city_id –≤ —Ç–∞–±–ª–∏—Ü—É orders...")
                db.session.execute(text("ALTER TABLE orders ADD COLUMN city_id VARCHAR(50) DEFAULT 'almaty'"))
                db.session.execute(text("CREATE INDEX IF NOT EXISTS idx_orders_city ON orders(city_id)"))
            else:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ city_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ orders")
            
            db.session.commit()
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
            db.session.rollback()
            return False
    
    return True

if __name__ == '__main__':
    success = apply_migration()
    sys.exit(0 if success else 1)
