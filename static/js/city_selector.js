/**
 * –ú–æ–¥—É–ª—å –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
 */

class CitySelector {
    constructor() {
        this.selectedCity = null;
        this.modal = null;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
     */
    async init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —É–∂–µ –≥–æ—Ä–æ–¥
        const savedCity = localStorage.getItem('selectedCity');
        
        if (savedCity) {
            console.log('–ì–æ—Ä–æ–¥ —É–∂–µ –≤—ã–±—Ä–∞–Ω:', savedCity);
            this.selectedCity = savedCity;
            return savedCity;
        }

        // –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –≤—ã–±—Ä–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
        await this.showCitySelector();
        return this.selectedCity;
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
     */
    async showCitySelector() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
        const cities = await this.loadActiveCities();
        
        if (!cities || cities.length === 0) {
            console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤');
            // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ê–ª–º–∞—Ç—ã
            this.selectCity('almaty');
            return;
        }

        // –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.createModal(cities);
        this.modal.style.display = 'flex';

        // –ñ–¥–µ–º –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
        return new Promise((resolve) => {
            this.onCitySelected = resolve;
        });
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
     */
    async loadActiveCities() {
        try {
            const response = await fetch('/api/cities');
            const data = await response.json();
            
            if (data.success) {
                return data.cities;
            }
            
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ—Ä–æ–¥–æ–≤:', data.error);
            return [];
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≥–æ—Ä–æ–¥–æ–≤:', error);
            return [];
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ HTML –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    createModal(cities) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –º–æ–¥–∞–ª–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldModal = document.getElementById('citySelectorModal');
        if (oldModal) {
            oldModal.remove();
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –º–æ–¥–∞–ª–∫—É
        const modalHTML = `
            <div id="citySelectorModal" class="modal-overlay">
                <div class="modal-content city-selector">
                    <div class="modal-header">
                        <h2>üèôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥</h2>
                        <p>–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º?</p>
                    </div>
                    
                    <div class="modal-body">
                        <div id="citiesList" class="cities-list">
                            ${this.generateCityCards(cities)}
                        </div>
                    </div>
                </div>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ body
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        this.modal = document.getElementById('citySelectorModal');

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤
        this.attachEventListeners(cities);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –∫–∞—Ä—Ç–æ—á–µ–∫ –≥–æ—Ä–æ–¥–æ–≤
     */
    generateCityCards(cities) {
        return cities.map(city => {
            const isActive = city.active;
            const disabledClass = isActive ? '' : 'disabled';
            const statusText = isActive ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–°–∫–æ—Ä–æ';

            return `
                <div class="city-card ${disabledClass}" data-city-id="${city.id}" data-active="${isActive}">
                    <div class="city-card-content">
                        <div style="display: flex; align-items: center;">
                            <span class="city-icon">üèôÔ∏è</span>
                            <div class="city-info">
                                <h3>${city.name}</h3>
                                <p>${city.name_en}</p>
                            </div>
                        </div>
                        <div class="city-status">${statusText}</div>
                    </div>
                </div>
            `;
        }).join('');
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventListeners(cities) {
        const cityCards = document.querySelectorAll('.city-card');
        
        cityCards.forEach(card => {
            const cityId = card.dataset.cityId;
            const isActive = card.dataset.active === 'true';

            if (isActive) {
                card.addEventListener('click', () => {
                    this.selectCity(cityId);
                    this.closeModal();
                    
                    if (this.onCitySelected) {
                        this.onCitySelected(cityId);
                    }
                });
            }
        });
    }

    /**
     * –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
     */
    selectCity(cityId) {
        this.selectedCity = cityId;
        localStorage.setItem('selectedCity', cityId);
        console.log('–ì–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–Ω:', cityId);

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ —á–∞—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        window.dispatchEvent(new CustomEvent('citySelected', { 
            detail: { cityId } 
        }));
    }

    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    closeModal() {
        if (this.modal) {
            this.modal.style.display = 'none';
            this.modal.remove();
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
     */
    getSelectedCity() {
        return this.selectedCity || localStorage.getItem('selectedCity') || 'almaty';
    }

    /**
     * –°–±—Ä–æ—Å–∏—Ç—å –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
     */
    resetCity() {
        localStorage.removeItem('selectedCity');
        this.selectedCity = null;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ
window.CitySelector = CitySelector;
