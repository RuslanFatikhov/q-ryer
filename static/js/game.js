/**
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∫—É—Ä—å–µ—Ä—Å–∫–æ–≥–æ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π
 */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –º–æ–¥—É–ª–µ–π
let gameState = null;
let mapManager = null;
let orderModal = null;
let shiftManager = null;
let socketManager = null;
let orderStatusBanner = null; // –ù–æ–≤—ã–π –º–æ–¥—É–ª—å –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
document.addEventListener("DOMContentLoaded", () => {
  console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—É—Ä—å–µ—Ä—Å–∫–æ–≥–æ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞");

  if (!checkDependencies()) return;

  initializeModules();
  initializeUI();

  restoreState().catch(err => console.error("–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:", err));

  initializeSwipeHandlers();
  console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
});

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */
function checkDependencies() {
  if (typeof mapboxgl === "undefined") {
    console.error("Mapbox GL –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω");
    return false;
  }
  if (typeof GeolocationManager === "undefined") {
    console.error("GeolocationManager –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω");
    return false;
  }
  if (typeof ShiftManager === "undefined") {
    console.error("ShiftManager –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å –ø–æ—Ä—è–¥–æ–∫ <script>)");
    return false;
  }
  return true;
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –º–æ–¥—É–ª–µ–π
 */
function initializeModules() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
  gameState = new GameState();
  window.gameState = gameState;

  // –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–∞—Ä—Ç—ã
  mapManager = new MapManager();
  window.mapManager = mapManager;
  mapManager.initialize();

  // WebSocket
  socketManager = new SocketManager(gameState, null, mapManager);
  window.socketManager = socketManager;
  socketManager.initialize();

  // –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–º–µ–Ω
  shiftManager = new ShiftManager(gameState, socketManager);
  window.shiftManager = shiftManager;

  // –ú–æ–¥–∞–ª–∫–∞ –∑–∞–∫–∞–∑–æ–≤
  orderModal = new OrderModal(gameState, shiftManager);
  window.orderModal = orderModal;

  // –°–≤—è–∑—å —Å–æ–∫–µ—Ç–∞ —Å –º–æ–¥–∞–ª–∫–æ–π
  socketManager.orderModal = orderModal;

  // –ë–∞–Ω–Ω–µ—Ä —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
  orderStatusBanner = new OrderStatusBanner();
  window.orderStatusBanner = orderStatusBanner;
  orderStatusBanner.initialize();

  // –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
  initializeGeolocation();
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
 */
async function initializeGeolocation() {
  const geoManager = new GeolocationManager();
  window.geoManager = geoManager;

  if (!geoManager.isSupported()) {
    shiftManager.updateShiftButton('UNSUPPORTED');
    return;
  }

  // –ö–æ–ª–ª–±—ç–∫–∏
  geoManager.onPermissionGranted = (pos) => shiftManager.onGPSPermissionGranted(pos);
  geoManager.onPermissionDenied = (err) => shiftManager.onGPSPermissionDenied(err);
  geoManager.onPositionUpdate  = (pos) => shiftManager.onPositionUpdate(pos);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —Ä–∞–Ω–µ–µ –¥–∞–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ GPS
  if (geoManager.hasStoredPermission()) {
    console.log("‚úÖ GPS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –¥–∞–Ω–æ, –ø–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é...");
    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
      await geoManager.requestPermission(true);
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–º–µ–Ω—ã
      if (gameState.isOnShift) {
        if (gameState.currentOrder) {
          shiftManager.updateShiftButton(shiftManager.SHIFT_STATES.END_SHIFT);
        } else if (gameState.isSearching) {
          shiftManager.updateShiftButton(shiftManager.SHIFT_STATES.SEARCHING);
        } else {
          shiftManager.updateShiftButton(shiftManager.SHIFT_STATES.START_SEARCH);
        }
      } else {
        shiftManager.updateShiftButton(shiftManager.SHIFT_STATES.START_SHIFT);
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è GPS:", error);
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—Ä–æ—Å–∞
      shiftManager.updateShiftButton(shiftManager.SHIFT_STATES.REQUESTING_GPS);
    }
  } else {
    // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –¥–∞–Ω–æ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—Ä–æ—Å–∞ GPS
    console.log("‚ö†Ô∏è GPS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–µ –¥–∞–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø—Ä–æ—Å–∞");
    shiftManager.updateShiftButton(shiftManager.SHIFT_STATES.REQUESTING_GPS);
  }
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */
function initializeUI() {
  // –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã
  const startGameButton = document.getElementById("startGame");
  if (startGameButton) {
    startGameButton.addEventListener("click", () => {
      shiftManager.handleShiftButtonClick();
    });
  }

  // –ö–Ω–æ–ø–∫–∞ "–º–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
  const myLocationButton = document.querySelector(".myloc");
  if (myLocationButton) {
    myLocationButton.addEventListener("click", () => {
      mapManager.centerOnUser();
    });
  }

  // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
  initializeModals();

  // –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã –≤ –ø—Ä–æ—Ñ–∏–ª–µ
  const endShiftBtn = document.getElementById("endShiftBtn");
  if (endShiftBtn) {
    endShiftBtn.addEventListener("click", async () => {
      if (!confirm("–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É? –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –±—É–¥—É—Ç –æ—Ç–º–µ–Ω–µ–Ω—ã.")) return;

      try {
        const response = await fetch('/api/stop_shift', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ user_id: gameState.userId })
        });

        if (response.ok) {
          window.location.reload();
        } else {
          const error = await response.json().catch(() => ({}));
          alertModal.error((error.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
      } catch (e) {
        alertModal.error(e.message);
      }
    });
  }

  // –ö–Ω–æ–ø–∫–∞ Report
  const reportButton = document.getElementById("reportButton");
  if (reportButton) {
    reportButton.addEventListener("click", () => {
      window.open('https://tally.so/r/3Ey0pN', '_blank');
    });
  }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
 */
function initializeModals() {
  const profileButton = document.getElementById("profileButton");
  if (profileButton) {
    // –°—Ç–∞–Ω–µ—Ç:
    profileButton.addEventListener("click", () => {
      toggleMapButton();
    });
  }

  document.querySelectorAll(".close").forEach(el => {
    el.addEventListener("click", () => {
      const modalId = el.dataset.close;
      if (modalId) closeModal(modalId);
    });
  });

  window.addEventListener("click", (e) => {
    if (e.target.classList.contains("modal")) {
      e.target.style.display = "none";
    }
  });
}

/**
 * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
 */
async function restoreState() {
  const stateManager = new StateManager(gameState);
  window.stateManager = stateManager;

  const restored = await stateManager.restoreFromServer();

  if (restored) {
    console.log("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å —Å–µ—Ä–≤–µ—Ä–∞");

    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
    if (window.orderStatusBanner && gameState.currentOrder) {
      orderStatusBanner.update(gameState.currentOrder);
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ GPS, –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
    if (gameState.currentOrder && window.geoManager) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º skipIfGranted = true, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø–æ–≤—Ç–æ—Ä–Ω–æ
      await window.geoManager.requestPermission(true);
      window.geoManager.startTracking((position) => {
        window.shiftManager?.sendPositionUpdate(position);
      });
    }
  } else {
    console.log("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ü—Ä–∏ –∫–ª–∏–∫–µ —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç—É –Ω–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞
 */
document.getElementById('centerLocationButton').addEventListener('click', () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä –∫–∞—Ä—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
  if (window.mapManager) {
    // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
    window.mapManager.centerOnUser();
    console.log("üéØ –ö–∞—Ä—Ç–∞ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ");
  } else {
    console.error("‚ùå MapManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
  if (!window.geoManager?.currentPosition) {
    alertModal.warning("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –í–∫–ª—é—á–∏—Ç–µ GPS.", "–í–Ω–∏–º–∞–Ω–∏–µ");
  }
});

/**
 * –£—Ç–∏–ª–∏—Ç—ã –º–æ–¥–∞–ª–æ–∫
 */
function openModal(id) {
  const modal = document.getElementById(id);
  if (modal) modal.style.display = "flex";
}

function closeModal(id) {
  const modal = document.getElementById(id);
  if (modal) modal.style.display = "none";
}


/**
 * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ map_button
 * –ü—Ä–∏ –∫–ª–∏–∫–µ –ø–æ–¥–Ω–∏–º–∞–µ—Ç/–æ–ø—É—Å–∫–∞–µ—Ç –ø–∞–Ω–µ–ª—å –Ω–∞ 400px
 */
/**
 * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ map_button
 * –ü—Ä–∏ –∫–ª–∏–∫–µ –ø–æ–¥–Ω–∏–º–∞–µ—Ç/–æ–ø—É—Å–∫–∞–µ—Ç –ø–∞–Ω–µ–ª—å –Ω–∞ 400px
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Ñ–∏–ª—è
 */
function toggleMapButton() {
  const mapButton = document.querySelector('.map_button');
  if (!mapButton) return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ø–æ–¥–Ω—è—Ç –∏–ª–∏ –Ω–µ—Ç)
  const isRaised = mapButton.classList.contains('raised');
  
  if (isRaised) {
    // –û–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ (—Å–∫—Ä—ã–≤–∞–µ–º)
    closeMapButton();
  } else {
    // –ü–æ–¥–Ω–∏–º–∞–µ–º –≤–≤–µ—Ä—Ö (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º)
    mapButton.classList.add('raised');
    mapButton.style.transform = 'translateY(-400px)';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ (—Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π)
    setTimeout(() => {
      document.addEventListener('click', handleOutsideClick);
    }, 100);
  }
}

/**
 * –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ map_button
 */
function closeMapButton() {
  const mapButton = document.querySelector('.map_button');
  if (!mapButton) return;
  
  mapButton.classList.remove('raised');
  mapButton.removeAttribute('style');
  
  // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏
  document.removeEventListener('click', handleOutsideClick);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ map_button
 */
function handleOutsideClick(event) {
  const mapButton = document.querySelector('.map_button');
  const profileButton = document.getElementById('profileButton');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –Ω–µ –ø–æ map_button –∏ –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–æ—Ñ–∏–ª—è
  if (mapButton && !mapButton.contains(event.target) && event.target !== profileButton) {
    closeMapButton();
  }
}


/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–≤–∞–π–ø–∞ –¥–ª—è map_button
 */
function initializeSwipeHandlers() {
  const mapButton = document.querySelector('.map_button');
  if (!mapButton) return;
  
  let touchStartY = 0;
  let touchEndY = 0;
  
  // –ù–∞—á–∞–ª–æ –∫–∞—Å–∞–Ω–∏—è
  mapButton.addEventListener('touchstart', (e) => {
    touchStartY = e.changedTouches[0].screenY;
  }, { passive: true });
  
  // –ö–æ–Ω–µ—Ü –∫–∞—Å–∞–Ω–∏—è
  mapButton.addEventListener('touchend', (e) => {
    touchEndY = e.changedTouches[0].screenY;
    handleSwipe();
  }, { passive: true });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–∞
  function handleSwipe() {
    const swipeDistance = touchStartY - touchEndY;
    const minSwipeDistance = 50; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Å–≤–∞–π–ø–∞
    
    // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö (–æ—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏)
    if (swipeDistance > minSwipeDistance) {
      const isRaised = mapButton.classList.contains('raised');
      if (!isRaised) {
        toggleMapButton();
      }
    }
    
    // –°–≤–∞–π–ø –≤–Ω–∏–∑ (–∑–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏)
    if (swipeDistance < -minSwipeDistance) {
      const isRaised = mapButton.classList.contains('raised');
      if (isRaised) {
        closeMapButton();
      }
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç
window.openModal = openModal;
window.closeModal = closeModal;
